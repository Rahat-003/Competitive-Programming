namespace allDiv{
    int *lowest_prime;
    struct sample{
        sample(int n){
            lowest_prime = (int*)malloc((n+2) * sizeof(int));
            for(int i = 2; i<=n; i++){
                for(int j = i; j<=n; j+=i){
                    if(!lowest_prime[j])    lowest_prime[j] = i;
                }
            }
        }
        vector<pii> tmp;    vector<int> qq;
        void solve(int pos,int n){
            if(pos==SZ(tmp)){
                qq.pb(n);
                return;
            }
            for(int i = 0,j = tmp[pos].ff; i<tmp[pos].ss; i++, j*=tmp[pos].ff){
                solve(pos+1,n*j);
            }
            solve(pos+1,n);
        }
        vector<int> query(int n){
            tmp.clear();    qq.clear();
            while(n>1){
                int x = lowest_prime[n],cnt = 0;
                while(n%x==0)   cnt++,n/=x;
                tmp.pb(pii(x,cnt));
            }
            solve(0,1);
            sort(all(qq));
            return qq;
        }
    };
}
